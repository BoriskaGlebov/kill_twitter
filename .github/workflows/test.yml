#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#      - dev2
#  pull_request:
#    branches:
#      - main
#      - dev2
#
#jobs:
#  setup:
#    uses: ./.github/workflows/setup-python.yml  # Call the reusable workflow
#    with:
#      python-version: '3.12'  # Specify the Python version
#
#  test:
#    runs-on: ubuntu-latest
#    needs: setup  # This job depends on the setup job НО все равно надо заново устанавливать библиотеки на каждую job
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: .env file create
#        run: |
#          echo "Creating .env file"
#          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#          echo "DB_TEST=${{ secrets.DB_TEST }}" >> .env
#          echo "UPLOAD_DIRECTORY=${{ secrets.UPLOAD_DIRECTORY }}" >> .env
#          echo "PYTHONPATH=${{ secrets.PYTHONPATH }}" >> .env
#
#
#      - name: .env file check
#        run: |
#          echo "Contents of .env file:"
#          cat .env
#
#      - name: Build and run Docker Compose
#        run: |
#          docker compose up --build -d
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Alembic Migrations
#        run: |
#          sleep 10
#          alembic -x db=test upgrade head
#      - name: Check Alembic Migrations
#        run: |
#          alembic current
#
#      - name: Run unit tests
#        run: python -m pytest tests
#
#  mypy:
#    runs-on: ubuntu-latest
#    needs: test  # This job depends on the setup job
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run MyPy type checking
#        run: mypy .
#
#  black:
#    runs-on: ubuntu-latest
#    needs: mypy  # This job depends on the setup job
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Black formatting check
#        run: black --diff --check .
#
#  isort:
#    runs-on: ubuntu-latest
#    needs: black  # This job depends on the setup job
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Isort check
#        run: isort --check-only .
#
#  flake8:
#    runs-on: ubuntu-latest
#    needs: isort
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Flake8 linting
#        run: flake8 .
