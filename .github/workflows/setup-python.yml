name: Setup Python and Install Dependencies

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Check version
        run: echo python3.12 -V

#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ inputs.python-version }}
#
#      - name: Cache Python dependencies
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
#
#      - name: Check if Alembic is installed
#        run: |
#          pip show alembic || echo "Alembic is not installed"
#
#      - name: Install Python dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1

#      - name: .env file create
#        run: |
#          echo "Creating .env file"
#          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#          echo "DB_TEST=${{ secrets.DB_TEST }}" >> .env
#          echo "UPLOAD_DIRECTORY=${{ secrets.UPLOAD_DIRECTORY }}" >> .env
#          echo "PYTHONPATH=${{ secrets.PYTHONPATH }}" >> .env
#
#      - name: .env file check
#        run: |
#          echo "Contents of .env file:"
#          cat .env
#
#      - name: Upload .env file as artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: env-file
#          path: .env


#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-

      # Здесь можно добавить шаги для создания .env файла, если это необходимо
