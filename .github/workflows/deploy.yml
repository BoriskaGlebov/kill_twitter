#name: Deploy to Server
#
#on:
#  push:
#    branches:
#      - main  # Укажите ветку, на которую будет происходить деплой
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v4  # Клонирование репозитория
#
#    - name: Set up SSH key
#      uses: webfactory/ssh-agent@v0.5.3  # Настройка SSH-ключа
#      with:
#        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Приватный ключ из секретов
#
#    - name: Add known hosts
#      run: echo "${{ secrets.SERVER_IP }} $(ssh-keyscan -H ${{ secrets.SERVER_IP }})" >> ~/.ssh/known_hosts  # Добавление сервера в known_hosts
#    - name: Test SSH connection
#      run: |
#        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "whoami" && echo PRIVET # Проверка подключения
#
#    - name: Deploy to server
#      run: |
#        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#        cd app/kill_twitter || exit  # Переход в директорию приложения
#        git pull origin main            # Обновление кода из репозитория
#        echo "Creating .env file"
#        echo rm -f .env
#        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
#        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
#        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
#        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
#        echo "DB_TEST=${{ secrets.DB_TEST }}" >> .env
#        echo "UPLOAD_DIRECTORY=${{ secrets.UPLOAD_DIRECTORY }}" >> .env
#        echo "PYTHONPATH=${{ secrets.PYTHONPATH }}" >> .env
#        docker-compose down  # Остановка текущих контейнеров (если они запущены)
#        docker-compose up -d
#        EOF
